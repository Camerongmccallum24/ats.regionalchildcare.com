version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: gro_ats_frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - gro_ats_network
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: gro_ats_backend
    ports:
      - "8001:8001"
    environment:
      # PostgreSQL Configuration (using your provided environment variable names)
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_SSLMODE: ${DB_SSLMODE}

      # Application Configuration
      SECRET_KEY: ${SECRET_KEY} # Using the provided SECRET_KEY env var
      ATS_DOMAIN: ${ATS_DOMAIN}

      # Careers Site Integration
      CAREERS_SITE_URL: ${CAREERS_SITE_URL}
      CAREERS_WEBHOOK_SECRET: ${CAREERS_WEBHOOK_SECRET}

      ENVIRONMENT: production
      DEBUG: false
      LOG_LEVEL: INFO

    env_file:
      - .env # Ensure your .env file is correctly configured with the above variables

    volumes:
      - ./logs:/app/logs # Assuming you still want log persistence

    networks:
      - gro_ats_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/dashboard/stats"] # Adjust if your health check endpoint changes
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  gro_ats_network:
    driver: bridge
