version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: gro_ats_frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - gro_ats_network
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: gro_ats_backend
    ports:
      - "8001:8001"
    environment:
      - MONGO_URL=${MONGO_URL}
      - DB_NAME=${DB_NAME}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - CAREERS_SITE_URL=${CAREERS_SITE_URL}
      - CAREERS_WEBHOOK_SECRET=${CAREERS_WEBHOOK_SECRET}
      - SECRET_KEY=${SECRET_KEY}
    env_file:
      - .env.production
    volumes:
      - ./logs:/app/logs
    networks:
      - gro_ats_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/dashboard/stats"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Local MongoDB (remove if using MongoDB Atlas)
  mongodb:
    image: mongo:6.0
    container_name: gro_ats_mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${DB_NAME}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - gro_ats_network
    restart: unless-stopped

volumes:
  mongodb_data:

networks:
  gro_ats_network:
    driver: bridge